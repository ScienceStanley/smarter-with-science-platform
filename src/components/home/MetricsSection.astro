---
/**
 * MetricsSection.astro
 * Community impact metrics with animated counters
 * 
 * Features:
 * - Animated number counting on scroll
 * - Mobile-optimized layout
 * - Accessible with proper ARIA labels
 * - Minimal JavaScript (<1KB)
 */

const metrics = [
  {
    value: 1234,
    suffix: '+',
    label: 'Community Scientists',
    description: 'Researchers, patients, and advocates working together'
  },
  {
    value: 42,
    suffix: '',
    label: 'Active Projects',
    description: 'Open research initiatives across all pods'
  },
  {
    value: 150,
    suffix: 'K',
    label: 'GPU Hours Shared',
    description: 'Computational power democratized for research'
  },
  {
    value: 89,
    suffix: '%',
    label: 'Open Source',
    description: 'Percentage of projects with public code'
  }
];
---

<section class="section-padding bg-background relative overflow-hidden">
  <!-- Animated background gradient -->
  <div class="absolute inset-0 opacity-30">
    <div class="absolute inset-0 bg-gradient-to-br from-primary/20 via-transparent to-success/20"></div>
  </div>

  <div class="container mx-auto relative z-10">
    <!-- Section Header -->
    <div class="text-center mb-2xl">
      <h2 class="text-3xl md:text-4xl lg:text-5xl font-space-grotesk font-light text-text-bright mb-md">
        Our Collective Impact
      </h2>
      <p class="text-lg text-text max-w-2xl mx-auto">
        Real change happens when communities come together. 
        Here's what we've achieved through open collaboration.
      </p>
    </div>

    <!-- Metrics Grid -->
    <div class="grid grid-cols-2 lg:grid-cols-4 gap-lg max-w-6xl mx-auto">
      {metrics.map((metric, index) => (
        <div 
          class="metric-card text-center"
          data-metric-value={metric.value}
          data-metric-suffix={metric.suffix}
          style={`animation-delay: ${index * 100}ms;`}
        >
          <!-- Animated Number -->
          <div class="mb-sm">
            <span class="metric-number text-4xl md:text-5xl lg:text-6xl font-space-grotesk font-bold text-primary" data-value={metric.value}>
              0
            </span>
            <span class="text-3xl md:text-4xl lg:text-5xl font-space-grotesk font-bold text-primary">
              {metric.suffix}
            </span>
          </div>
          
          <!-- Label -->
          <h3 class="text-lg font-medium text-text-bright mb-xs">
            {metric.label}
          </h3>
          
          <!-- Description -->
          <p class="text-sm text-text leading-relaxed">
            {metric.description}
          </p>
        </div>
      ))}
    </div>

    <!-- Supporting Text -->
    <div class="text-center mt-2xl max-w-3xl mx-auto">
      <p class="text-text mb-md">
        Every number represents a person, a breakthrough, or a community served. 
        Together, we're proving that science belongs to everyone.
      </p>
      <a 
        href="/impact" 
        class="inline-flex items-center text-primary hover:text-primary/80 transition-colors duration-200 group"
      >
        View detailed impact report
        <svg 
          class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform duration-200" 
          fill="none" 
          stroke="currentColor" 
          viewBox="0 0 24 24"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .metric-card {
    opacity: 0;
    animation: fadeInUp 0.6s ease-out forwards;
  }

  /* Pulse animation for numbers */
  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }

  .metric-number.counting-complete {
    animation: pulse 0.3s ease-out;
  }

  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    .metric-card {
      animation: none;
      opacity: 1;
    }
    
    .metric-number.counting-complete {
      animation: none;
    }
  }
</style>

<script>
  // Lightweight counter animation
  function animateCounter(element: HTMLElement, target: number, duration: number = 2000) {
    let start = 0;
    const increment = target / (duration / 16); // 60fps
    
    const updateCounter = () => {
      start += increment;
      if (start < target) {
        element.textContent = Math.floor(start).toString();
        requestAnimationFrame(updateCounter);
      } else {
        element.textContent = target.toString();
        element.classList.add('counting-complete');
      }
    };
    
    updateCounter();
  }

  // Intersection Observer for triggering animations
  const observerOptions = {
    threshold: 0.3,
    rootMargin: '0px 0px -100px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const card = entry.target;
        const numberElement = card.querySelector('.metric-number') as HTMLElement;
        const value = parseInt(card.getAttribute('data-metric-value') || '0');
        
        // Start counting animation
        if (numberElement && !numberElement.classList.contains('counted')) {
          numberElement.classList.add('counted');
          animateCounter(numberElement, value);
        }
        
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  // Observe all metric cards
  document.querySelectorAll('.metric-card').forEach(card => {
    observer.observe(card);
  });
</script>