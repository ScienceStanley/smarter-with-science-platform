---
/**
 * PodsShowcase.astro
 * Showcase the four research pods with hexagonal grid layout
 * 
 * Mobile-first design with:
 * - Stacked layout on mobile
 * - 2x2 grid on tablet
 * - Hexagonal hover effects
 * - Smooth transitions
 */

import Hexagon from '../ui/Hexagon.astro';
import Button from '../ui/Button.astro';

const pods = [
  {
    id: 'ocean-vision',
    name: 'Ocean ViSION',
    icon: 'üåä',
    pixelArt: '/images/pod-ocean-vision-pixel.svg',
    description: 'AI-powered marine conservation combining computer vision with community science to protect our oceans.',
    stats: '12 active projects',
    color: 'primary',
    href: '/pods/ocean-vision'
  },
  {
    id: 'ai-impact',
    name: 'AI Impact Ventures',
    icon: 'üöÄ',
    pixelArt: '/images/pod-ai-impact-pixel.svg',
    description: 'Ethical AI development for social good, ensuring technology serves humanity\'s greatest challenges.',
    stats: '8 active projects',
    color: 'success',
    href: '/pods/ai-impact'
  },
  {
    id: 'quantum-bio',
    name: 'Quantum Biology',
    icon: '‚öõÔ∏è',
    pixelArt: '/images/pod-quantum-bio-pixel.svg',
    description: 'Exploring quantum effects in biological systems to unlock new frontiers in medicine and biotechnology.',
    stats: '6 active projects',
    color: 'primary',
    href: '/pods/quantum-bio'
  },
  {
    id: 'community-resilience',
    name: 'Community Resilience',
    icon: 'üèòÔ∏è',
    pixelArt: '/images/pod-community-resilience-pixel.svg',
    description: 'Local solutions to global challenges, empowering communities with science and technology.',
    stats: '15 active projects',
    color: 'success',
    href: '/pods/community-resilience'
  }
];
---

<section class="section-padding-lg relative">
  <div class="container mx-auto">
    <!-- Section Header -->
    <div class="text-center mb-2xl">
      <h2 class="text-3xl md:text-4xl lg:text-5xl font-space-grotesk font-light text-text-bright mb-md">
        Research Pods
      </h2>
      <p class="text-lg text-text max-w-3xl mx-auto">
        Autonomous working groups tackling humanity's greatest challenges through 
        open collaboration and community-driven research.
      </p>
    </div>

    <!-- Pods Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-xl max-w-5xl mx-auto">
      {pods.map((pod, index) => (
        <a 
          href={pod.href}
          class="pod-card group relative block"
          style={`animation-delay: ${index * 150}ms;`}
        >
          <!-- Background glow effect -->
          <div class="absolute inset-0 bg-primary/10 rounded-lg blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
          
          <!-- Card content -->
          <div class="relative bg-surface/50 border border-border rounded-lg overflow-hidden group-hover:border-primary/50 transition-all duration-300">
            <!-- Pixel art hero image -->
            <div class="relative h-48 overflow-hidden">
              <img 
                src={pod.pixelArt} 
                alt={`${pod.name} pixel art`}
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
                style="image-rendering: pixelated;"
              />
              <!-- Overlay gradient -->
              <div class="absolute inset-0 bg-gradient-to-t from-surface/80 via-surface/20 to-transparent"></div>
              
              <!-- Pod icon badge -->
              <div class="absolute top-4 right-4">
                <Hexagon size="md" color={pod.color} class="group-hover:scale-110 transition-transform duration-300">
                  <span class="text-lg">{pod.icon}</span>
                </Hexagon>
              </div>
            </div>
            
            <!-- Content section -->
            <div class="p-lg">
              <h3 class="text-xl font-space-grotesk font-medium text-text-bright mb-sm group-hover:text-primary transition-colors duration-300">
                {pod.name}
              </h3>
              <p class="text-text text-sm leading-relaxed mb-sm">
                {pod.description}
              </p>
              <p class="text-success text-sm font-medium">
                {pod.stats}
              </p>
            </div>
            
            <!-- Arrow indicator -->
            <div class="absolute bottom-lg right-lg opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-x-2 group-hover:translate-x-0">
              <svg class="w-5 h-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
              </svg>
            </div>
          </div>
        </a>
      ))}
    </div>

    <!-- Call to Action -->
    <div class="text-center mt-2xl">
      <Button variant="secondary" size="lg" href="/pods">
        Explore All Research Pods
      </Button>
    </div>
  </div>
</section>

<style>
  @keyframes fadeInScale {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .pod-card {
    opacity: 0;
    animation: fadeInScale 0.5s ease-out forwards;
  }

  /* Create hexagonal clip path on hover */
  @media (min-width: 1024px) {
    .pod-card::before {
      content: '';
      position: absolute;
      inset: -2px;
      background: linear-gradient(45deg, var(--color-primary), var(--color-success));
      clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
      opacity: 0;
      transition: opacity 0.3s ease-out;
      z-index: -1;
    }
    
    .pod-card:hover::before {
      opacity: 0.3;
    }
  }

  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    .pod-card {
      animation: none;
      opacity: 1;
    }
  }
</style>

<script>
  // Add intersection observer for scroll animations
  const cards = document.querySelectorAll('.pod-card');
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting && entry.target instanceof HTMLElement) {
        entry.target.style.visibility = 'visible';
        observer.unobserve(entry.target);
      }
    });
  }, {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  });

  cards.forEach(card => {
    if (card instanceof HTMLElement) {
      card.style.visibility = 'hidden';
      observer.observe(card);
    }
  });
</script>