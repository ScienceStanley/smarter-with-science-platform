---
/**
 * ProjectCard.astro
 * Individual project card for the gallery
 * 
 * Features:
 * - Responsive design with image
 * - Pod indicator with hexagon
 * - Hover effects and smooth transitions
 * - Status badges
 */

import Hexagon from '../ui/Hexagon.astro';
import type { CollectionEntry } from 'astro:content';

export interface Props {
  project: CollectionEntry<'projects'>;
}

const { project } = Astro.props;
const { data, slug } = project;

// Calculate days since last update
const daysSinceUpdate = Math.floor((Date.now() - data.lastUpdated.getTime()) / (1000 * 60 * 60 * 24));

// Status colors
const statusColors = {
  active: 'text-success border-success',
  planning: 'text-primary border-primary',
  completed: 'text-text border-text',
  archived: 'text-text/50 border-text/50'
};
---

<article class="project-card group h-full">
  <a href={`/projects/${slug}`} class="block h-full">
    <div class="relative bg-surface/50 border border-border rounded-lg overflow-hidden h-full hover:border-primary/50 transition-all duration-300">
      <!-- Image Section -->
      <div class="relative h-48 bg-gradient-to-br from-primary/20 to-success/20 overflow-hidden">
        {data.image ? (
          <img 
            src={data.image} 
            alt={data.title}
            class="w-full h-full object-cover opacity-80 group-hover:opacity-100 group-hover:scale-105 transition-all duration-500"
            loading="lazy"
          />
        ) : (
          <div class="w-full h-full flex items-center justify-center">
            <Hexagon size="xl" color="outline" class="opacity-30">
              <span class="text-3xl">{data.pod.icon}</span>
            </Hexagon>
          </div>
        )}
        
        <!-- Pod Badge -->
        <div class="absolute top-4 left-4">
          <Hexagon size="sm" color="primary" class="bg-background/90 backdrop-blur-sm">
            <span class="text-lg">{data.pod.icon}</span>
          </Hexagon>
        </div>
        
        <!-- Status Badge -->
        <div class="absolute top-4 right-4">
          <span class={`text-xs px-3 py-1 rounded-full border ${statusColors[data.status]} bg-background/90 backdrop-blur-sm`}>
            {data.status}
          </span>
        </div>
      </div>
      
      <!-- Content Section -->
      <div class="p-6">
        <!-- Title -->
        <h3 class="text-xl font-space-grotesk font-medium text-text-bright mb-2 group-hover:text-primary transition-colors duration-300 line-clamp-2">
          {data.title}
        </h3>
        
        <!-- Description -->
        <p class="text-text text-sm leading-relaxed mb-4 line-clamp-3">
          {data.description}
        </p>
        
        <!-- Technologies -->
        <div class="flex flex-wrap gap-2 mb-4">
          {data.technologies.slice(0, 3).map(tech => (
            <span class="text-xs px-2 py-1 rounded bg-primary/10 text-primary">
              {tech}
            </span>
          ))}
          {data.technologies.length > 3 && (
            <span class="text-xs px-2 py-1 text-text">
              +{data.technologies.length - 3} more
            </span>
          )}
        </div>
        
        <!-- Footer Info -->
        <div class="flex items-center justify-between text-xs text-text">
          <span>{data.pod.name}</span>
          <span>Updated {daysSinceUpdate}d ago</span>
        </div>
      </div>
      
      <!-- Hover Arrow -->
      <div class="absolute bottom-6 right-6 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-x-2 group-hover:translate-x-0">
        <svg class="w-5 h-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
        </svg>
      </div>
    </div>
  </a>
</article>

<style>
  /* Line clamp utilities */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Card glow on hover */
  .project-card:hover {
    filter: drop-shadow(0 0 20px rgba(189, 0, 255, 0.1));
  }
</style>